[{"/Users/salt-dev/Documents/personal-project-2/budget-app/frontend/src/index.tsx":"1","/Users/salt-dev/Documents/personal-project-2/budget-app/frontend/src/reportWebVitals.ts":"2","/Users/salt-dev/Documents/personal-project-2/budget-app/frontend/src/App.tsx":"3","/Users/salt-dev/Documents/personal-project-2/budget-app/frontend/src/components/Home.tsx":"4","/Users/salt-dev/Documents/personal-project-2/budget-app/frontend/src/components/Nav.tsx":"5","/Users/salt-dev/Documents/personal-project-2/budget-app/frontend/src/components/AddEditTransaction.tsx":"6","/Users/salt-dev/Documents/personal-project-2/budget-app/frontend/src/components/ListTransactionMonth.tsx":"7"},{"size":429,"mtime":1678875522065,"results":"8","hashOfConfig":"9"},{"size":425,"mtime":1678788083165,"results":"10","hashOfConfig":"9"},{"size":1866,"mtime":1678827006699,"results":"11","hashOfConfig":"9"},{"size":1519,"mtime":1678862265902,"results":"12","hashOfConfig":"9"},{"size":331,"mtime":1678875388765,"results":"13","hashOfConfig":"9"},{"size":5235,"mtime":1678869927682,"results":"14","hashOfConfig":"9"},{"size":3614,"mtime":1678874398647,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"r09fqo",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"27"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"27"},"/Users/salt-dev/Documents/personal-project-2/budget-app/frontend/src/index.tsx",["44"],[],"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\n\n\n\n\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n      <BrowserRouter>\n          <App/>\n      </BrowserRouter>\n  </React.StrictMode>\n);\n\n\n","/Users/salt-dev/Documents/personal-project-2/budget-app/frontend/src/reportWebVitals.ts",[],[],"/Users/salt-dev/Documents/personal-project-2/budget-app/frontend/src/App.tsx",["45"],[],"import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Home from './components/Home';\nimport { Routes, Route } from \"react-router-dom\";\nimport Nav from './components/Nav';\nimport AddEditTransaction from './components/AddEditTransaction';\nimport ListTransactionMonth from './components/ListTransactionMonth';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav />\n      <Routes>\n        <Route path=\"/\" element={<Home />}> </Route>\n\n        <Route path=\"/addnewtransaction\" element={<AddEditTransaction />}> </Route>\n\n        <Route path=\"/month/january\" element={<ListTransactionMonth month='january' />}> </Route>\n        <Route path=\"/month/february\" element={<ListTransactionMonth month='february' />}> </Route>\n        <Route path=\"/month/march\" element={<ListTransactionMonth month='march' />}> </Route>\n        <Route path=\"/month/april\" element={<ListTransactionMonth month='april' />}> </Route>\n        <Route path=\"/month/may\" element={<ListTransactionMonth month='may' />}> </Route>\n        <Route path=\"/month/june\" element={<ListTransactionMonth month='june' />}> </Route>\n        <Route path=\"/month/july\" element={<ListTransactionMonth month='july' />}> </Route>\n        <Route path=\"/month/august\" element={<ListTransactionMonth month='august' />}> </Route>\n        <Route path=\"/month/september\" element={<ListTransactionMonth month='september' />}> </Route>\n        <Route path=\"/month/october\" element={<ListTransactionMonth month='october' />}> </Route>\n        <Route path=\"/month/november\" element={<ListTransactionMonth month='november' />}> </Route>\n        <Route path=\"/month/december\" element={<ListTransactionMonth month='december' />}> </Route>\n\n        <Route path = \"/edit-transaction/:id\" element = {<AddEditTransaction />}> </Route>\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n",[],"/Users/salt-dev/Documents/personal-project-2/budget-app/frontend/src/components/Home.tsx",["46"],[],"import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport '../css/Home.css';\n\nfunction Home() {\n    return (\n        <>\n            <h1>Welcom to your Budget App!</h1>\n            <div className=\"page-conent\">\n                <div className=\"btn-group\">\n                    <Link className=\"button-month\" to=\"/month/january\">JANUARY</Link>\n                    <Link className=\"button-month\" to=\"/month/february\">FEBRUARY</Link>\n                    <Link className=\"button-month\" to=\"/month/march\">MARCH</Link>\n                    <Link className=\"button-month\" to=\"/month/april\">APRIL</Link>\n                </div>\n\n                <div className=\"btn-group\">\n                    <Link className=\"button-month\" to=\"/month/may\">MAY</Link>\n                    <Link className=\"button-month\" to=\"/month/june\">JUNE</Link>\n                    <Link className=\"button-month\" to=\"/month/july\">JULY</Link>\n                    <Link className=\"button-month\" to=\"/month/august\">AUGUST</Link>\n                </div>\n\n                <div className=\"btn-group\">\n                    <Link className=\"button-month\" to=\"/month/september\">SEPTEMBER</Link>\n                    <Link className=\"button-month\" to=\"/month/october\">OCTOBER</Link>\n                    <Link className=\"button-month\" to=\"/month/november\">NOVEMBER</Link>\n                    <Link className=\"button-month\" to=\"/month/december\">DECEMBER</Link>\n                </div>\n\n            </div>\n        </>\n    );\n}\n\nexport default Home;","/Users/salt-dev/Documents/personal-project-2/budget-app/frontend/src/components/Nav.tsx",["47"],[],"import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport '../css/Nav.css';\n\n\nconst Nav=() =>{\n    return (\n        <nav className=\"navbar\">\n            <Link  to=\"/\">Home</Link>\n            <Link  to=\"/addnewtransaction\">Add new transaction</Link>\n        </nav>\n    );\n  }\n  \n  export default Nav;","/Users/salt-dev/Documents/personal-project-2/budget-app/frontend/src/components/AddEditTransaction.tsx",["48","49","50","51","52"],[],"import { useEffect, useState } from \"react\";\nimport { ICategoryName, ITransaction, IRespTransaction } from '../Interfaces'\nimport { Link, useParams } from 'react-router-dom';\nimport axios from \"axios\";\nimport '../css/AddEditTransaction.css';\nimport { useNavigate } from \"react-router-dom\";\n\nfunction AddEditTransaction() {\n\n    const [categories, setCategories] = useState<ICategoryName[]>();\n    const [transaction, setTransaction] = useState<ITransaction>();\n    const [category, setCategory] = useState<string>('No category');\n    const [description, setDescription] = useState<string>('');\n    const [month, setMonth] = useState<string>('january');\n    const [typeIncEx, settypeIncEx] = useState<string>('Expense');\n    const [amount, setAmount] = useState<number>(0);\n    const navigate = useNavigate();\n    const { id } = useParams<string>();\n\n\n    const createTransaction = (transaction: ITransaction) => {\n        return axios.post('http://localhost:8080/api/transactions', transaction)\n            .then((response) => {\n                console.log(response)\n                navigate(\"/month/\" + month);\n\n            }).catch(error => {\n                console.log(error)\n            });\n    };\n\n    const updateTransaction = (transactionId: string, transaction: ITransaction) => {\n        return axios.put('http://localhost:8080/api/transactions/' + transactionId, transaction).then((response) => {\n            console.log(response)\n            navigate(\"/month/\" + month);\n\n        }).catch(error => {\n            console.log(error)\n        });\n    };\n\n    const getTransactionById = (transactionId: string) => {\n        return axios.get('http://localhost:8080/api/transactions/' + transactionId);\n    };\n\n\n\n    useEffect(() => {\n        const url = 'http://localhost:8080/api/categories';\n        axios.get(url).then((response) => {\n            setCategories(response.data);\n            console.log({ categories });\n        });\n        if (id) {\n            getTransactionById(id).then((response) => {\n                setCategory(response.data.category);\n                setMonth(response.data.month);\n                setAmount(response.data.amount);\n                setDescription(response.data.description);\n                settypeIncEx(response.data.type);\n            })\n\n        }\n    }, []);\n\n    const addTransaction = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        e.preventDefault();\n        const transaction = { typeIncEx, category, month, description, amount };\n        console.log(transaction);\n\n        if (id) {\n            updateTransaction(id, transaction).then((response) => {\n                // history.push('/employees')\n            }).catch(error => {\n                console.log(error)\n            })\n        } else {\n            createTransaction(transaction);\n        }\n    }\n\n    return (\n        <div>\n            <h1>Transaction</h1>\n            <div className=\"container\">\n                <form>\n                    <label >Type</label>\n                    <select value={typeIncEx} onChange={(e) => settypeIncEx(e.target.value)}>\n                        <option value=\"Income\">Income</option>\n                        <option value=\"Expense\">Expense</option>\n                    </select>\n\n                    <label >Category</label>\n                    <select value={category} onChange={(e) => setCategory(e.target.value)}>\n                        {categories\n                            ? categories.map((category) => {\n                                return <option key={category.categoryName} value={category.categoryName}>{category.categoryName}</option>;\n                            }) : null}\n                    </select>\n\n                    <label >Month</label>\n                    <select value={month} onChange={(e) => setMonth(e.target.value)}>\n                        <option value=\"january\">january</option>\n                        <option value=\"february\">february</option>\n                        <option value=\"march\">march</option>\n\n                        <option value=\"april\">april</option>\n                        <option value=\"may\">may</option>\n                        <option value=\"june\">june</option>\n\n                        <option value=\"july\">july</option>\n                        <option value=\"august\">august</option>\n                        <option value=\"september\">september</option>\n\n                        <option value=\"october\">october</option>\n                        <option value=\"november\">november</option>\n                        <option value=\"december\">december</option>\n                    </select>\n                    <label >Description</label>\n                    <textarea value={description} onChange={(e) => setDescription(e.target.value)} placeholder=\"Add description..\" ></textarea>\n                    <label >Amount</label>\n                    <input value={amount} onChange={(e) => setAmount(e.target.valueAsNumber)} type=\"number\" step=\"0.01\" id=\"fname\" name=\"firstname\" placeholder=\"Amount...\" />\n                    <button className=\"add-button\" onClick={event => addTransaction(event)}>Submit</button>\n                </form>\n            </div>\n\n\n        </div>\n\n    );\n}\n\nexport default AddEditTransaction;","/Users/salt-dev/Documents/personal-project-2/budget-app/frontend/src/components/ListTransactionMonth.tsx",["53","54","55","56"],[],"\nimport axios from \"axios\";\nimport React, { Component, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { ICategoryName, ITransaction, IRespTransaction } from '../Interfaces';\nimport '../css/ListTransactionMonth.css';\n\ninterface Props {\n    month: string;\n}\n\nconst ListTransactionMonth = ({ month }: Props) => {\n    const [transactions, setTransactions] = useState<IRespTransaction[]>([])\n    let sum = 0;\n\n    useEffect(() => {\n        getAllTransactions(month);\n    }, [])\n\n    const getAllTransactions = (month: string) => {\n        axios.get('http://localhost:8080/api/transactions/month/' + month).then((response) => {\n            setTransactions(response.data)\n            console.log(response.data)\n        }).catch(error => {\n            console.log(error);\n        })\n\n    }\n\n    function sumArray(transactions: IRespTransaction[]) {\n        transactions.forEach(transaction => {\n            sum += transaction.amount;\n        });\n\n        console.log(sum);\n        return sum;\n    }\n\n    const deleteTransaction = (transactionId: any) => {\n        axios.delete('http://localhost:8080/api/transactions/' + transactionId).then((response) => {\n            getAllTransactions(month);\n\n        }).catch(error => {\n            console.log(error);\n        })\n\n    }\n\n\n    return (\n        <>\n            <div className=\"container-List\">\n                <h1 className=\"text-center\"> List Transactions </h1>\n                {/* <Link to=\"/addnewtransaction\" className=\"btn btn-primary mb-2\" > Add Transaction </Link> */}\n                <div className=\"table-container\">\n                <table >\n                    <thead className=\"table-Header\">\n                        <tr>\n                            <th> Id </th>\n                            <th> Type </th>\n                            <th> Category </th>\n                            <th> Month </th>\n                            <th> Description </th>\n                            <th> Amount </th>\n                            <th> Edit / Delete </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            transactions.map(\n                                transaction =>\n                                    <tr key={transaction.id}>\n                                        <td> {transaction.id} </td>\n                                        <td> {transaction.type} </td>\n                                        <td> {transaction.category} </td>\n                                        <td>{transaction.month}</td>\n                                        <td>{transaction.description}</td>\n                                        <td>{transaction.amount}</td>\n                                        <td className=\"edit-delete-container\">\n                                            <Link className=\"button-Edit\" to={`/edit-transaction/${transaction.id}`} >Update</Link>\n                                            <button className=\"button-Delete\" onClick={() => deleteTransaction(transaction.id)}\n                                                style={{ marginLeft: \"10px\" }}> Delete</button>\n                                        </td>\n                                    </tr>\n                            )\n                        }\n                    </tbody>\n\n                </table>\n                </div>\n\n            </div>\n            <div className=\"summury\">\n                <h2>Money left</h2>\n                <h2>{sumArray(transactions)}</h2>\n            </div>\n        </>\n    )\n}\n\nexport default ListTransactionMonth;",{"ruleId":"57","severity":1,"message":"58","line":5,"column":8,"nodeType":"59","messageId":"60","endLine":5,"endColumn":23},{"ruleId":"57","severity":1,"message":"61","line":2,"column":8,"nodeType":"59","messageId":"60","endLine":2,"endColumn":12},{"ruleId":"57","severity":1,"message":"62","line":1,"column":17,"nodeType":"59","messageId":"60","endLine":1,"endColumn":26},{"ruleId":"57","severity":1,"message":"62","line":1,"column":17,"nodeType":"59","messageId":"60","endLine":1,"endColumn":26},{"ruleId":"57","severity":1,"message":"63","line":2,"column":39,"nodeType":"59","messageId":"60","endLine":2,"endColumn":55},{"ruleId":"57","severity":1,"message":"64","line":3,"column":10,"nodeType":"59","messageId":"60","endLine":3,"endColumn":14},{"ruleId":"57","severity":1,"message":"65","line":11,"column":12,"nodeType":"59","messageId":"60","endLine":11,"endColumn":23},{"ruleId":"57","severity":1,"message":"66","line":11,"column":25,"nodeType":"59","messageId":"60","endLine":11,"endColumn":39},{"ruleId":"67","severity":1,"message":"68","line":64,"column":8,"nodeType":"69","endLine":64,"endColumn":10,"suggestions":"70"},{"ruleId":"57","severity":1,"message":"62","line":3,"column":17,"nodeType":"59","messageId":"60","endLine":3,"endColumn":26},{"ruleId":"57","severity":1,"message":"71","line":5,"column":10,"nodeType":"59","messageId":"60","endLine":5,"endColumn":23},{"ruleId":"57","severity":1,"message":"72","line":5,"column":25,"nodeType":"59","messageId":"60","endLine":5,"endColumn":37},{"ruleId":"67","severity":1,"message":"73","line":18,"column":8,"nodeType":"69","endLine":18,"endColumn":10,"suggestions":"74"},"@typescript-eslint/no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","'Component' is defined but never used.","'IRespTransaction' is defined but never used.","'Link' is defined but never used.","'transaction' is assigned a value but never used.","'setTransaction' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'categories' and 'id'. Either include them or remove the dependency array.","ArrayExpression",["75"],"'ICategoryName' is defined but never used.","'ITransaction' is defined but never used.","React Hook useEffect has a missing dependency: 'month'. Either include it or remove the dependency array.",["76"],{"desc":"77","fix":"78"},{"desc":"79","fix":"80"},"Update the dependencies array to be: [categories, id]",{"range":"81","text":"82"},"Update the dependencies array to be: [month]",{"range":"83","text":"84"},[2304,2306],"[categories, id]",[506,508],"[month]"]